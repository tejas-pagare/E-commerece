<!DOCTYPE html>
<html lang="en">
<head>
  <title>Industry Dashboard</title>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
</head>

<body class="bg-gray-100 min-h-screen">
  <!-- Header -->
  <header class="bg-white shadow-sm sticky top-0 z-20">
    <div class="max-w-7xl mx-auto flex items-center justify-between px-6 py-4">
      <!-- Logo -->
      <div class="flex items-center gap-2">
        <span class="inline-block w-8 h-8 bg-emerald-500 rounded-full"></span>
        <span class="text-2xl font-bold text-emerald-700 tracking-wide">Swift Mart</span>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:flex gap-8">
        <a href="home" class="text-gray-700 hover:text-emerald-600">Home</a>
        <a href="about" class="text-gray-700 hover:text-emerald-600">About</a>
        <a href="blog" class="text-gray-700 hover:text-emerald-600">Blogs</a>
        <a href="dashboard" class="text-gray-700 hover:text-emerald-600">Dashboard</a>
      </nav>

      <!-- Icon Buttons -->
      <div class="flex items-center space-x-2">
        <a href="cart" class="bg-emerald-600 hover:bg-emerald-700 text-white p-2 rounded-lg transition inline-block"
          aria-label="Cart">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2 9m13-9v9m-6 0a2 2 0 104 0 2 2 0 00-4 0z" />
          </svg>
        </a>
        <a href="profile" class="bg-emerald-700 hover:bg-emerald-800 text-white p-2 rounded-lg transition inline-block"
          aria-label="Profile">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M5.121 17.804A8.966 8.966 0 0112 15c1.657 0 3.21.402 4.879 1.117M15 10a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
        </a>
        <a href="logout" aria-label="Logout" class="bg-red-600 hover:bg-red-700 text-white p-2 rounded-lg transition inline-block">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1m0-10V5" />
          </svg>
        </a>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <div class="max-w-6xl mx-auto py-10 px-4">
    <h1 class="text-3xl font-bold mb-6 text-gray-800">Dashboard</h1>

    <!-- Summary Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <div class="bg-white shadow rounded-lg p-6 flex flex-col items-center">
        <span class="text-xl font-semibold text-gray-700">Total Orders</span>
        <span id="totalOrders" class="text-4xl font-bold text-emerald-600 mt-2">0</span>
      </div>

      <div class="bg-white shadow rounded-lg p-6 flex flex-col items-center">
        <span class="text-xl font-semibold text-gray-700">Total Amount</span>
        <span id="totalAmount" class="text-4xl font-bold text-emerald-600 mt-2">₹0</span>
      </div>

      <div class="bg-white shadow rounded-lg p-6 flex flex-col items-center">
        <span class="text-xl font-semibold text-gray-700">Completed Orders</span>
        <span id="completedOrders" class="text-4xl font-bold text-emerald-600 mt-2">0</span>
      </div>
    </div>









    <!-- Filter + Refresh -->
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-3">
        <button data-filter="all"
          class="filter-btn bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700 transition">All</button>
        <button data-filter="Completed"
          class="filter-btn bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700 transition">Completed</button>
        <button data-filter="Pending"
          class="filter-btn bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700 transition">Pending</button>
      </div>
      <button id="refreshBtn"
        class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 shadow">⟳ Refresh</button>
    </div>

    <!-- Order Table -->
    <div class="bg-white shadow rounded-lg p-6 overflow-x-auto">
      <h2 class="text-2xl font-semibold mb-4">Order History</h2>

      <div id="loader" class="text-center text-gray-500 py-6 hidden">Loading...</div>

      <table class="w-full text-left" id="ordersTable">
        <thead>
          <tr class="border-b bg-gray-50">
            <th class="py-2 px-3">Order ID</th>
            <th class="py-2 px-3">Date</th>
            <th class="py-2 px-3">Quantity</th>
            <th class="py-2 px-3">Amount</th>
            <th class="py-2 px-3">Status</th>
          </tr>
        </thead>
        <tbody id="orderBody">
          <tr><td colspan="5" class="text-center text-gray-500 py-4">No orders found</td></tr>
        </tbody>
      </table>
    </div>
  </div>



                                                                                                                                        
  <!-- Script -->
                                                                                                          
                                                                                                                       


  <script>
    let allOrders = [];

    document.addEventListener("DOMContentLoaded", () => {
      fetchDashboard();

      // Refresh button
      document.getElementById("refreshBtn").addEventListener("click", fetchDashboard);

      // Filter buttons
      document.querySelectorAll(".filter-btn").forEach(btn => {
        btn.addEventListener("click", () => {
          const filter = btn.dataset.filter;
          filterOrders(filter);

          // Highlight selected
          document.querySelectorAll(".filter-btn").forEach(b => b.classList.remove("bg-emerald-600", "text-white"));
          btn.classList.add("bg-emerald-600", "text-white");
        });
      });
    });

    // Fetch data from backend
    function fetchDashboard() {
      const loader = document.getElementById("loader");
      const tbody = document.getElementById("orderBody");
      loader.classList.remove("hidden");
      tbody.innerHTML = "";

      const xhr = new XMLHttpRequest();
      xhr.open("GET", "http://localhost:8000/api/v1/industry/fetchdashboard", true);
      xhr.withCredentials = true;

      xhr.onload = function () {
        loader.classList.add("hidden");

        if (xhr.status === 200) {
          const { orders, totalAmount } = JSON.parse(xhr.responseText);
          allOrders = orders || [];

          // Update summary
          document.getElementById("totalOrders").textContent = allOrders.length;
          document.getElementById("totalAmount").textContent = `₹${totalAmount || 0}`;
          document.getElementById("completedOrders").textContent =
            allOrders.filter(o => o.status === "Completed").length;

          renderOrders(allOrders);
        } else if (xhr.status === 401) {
          tbody.innerHTML = `<tr><td colspan="5" class="text-red-600 text-center py-4">Access Denied — Please Login</td></tr>`;
        } else {
          tbody.innerHTML = `<tr><td colspan="5" class="text-red-600 text-center py-4">Server Error (${xhr.status})</td></tr>`;
        }
      };

      xhr.onerror = function () {
        loader.classList.add("hidden");
        tbody.innerHTML = `<tr><td colspan="5" class="text-red-600 text-center py-4">Network Error</td></tr>`;
      };

      xhr.send();
    }

    // Render orders in table
    function renderOrders(data) {
      const tbody = document.getElementById("orderBody");
      tbody.innerHTML = "";

      if (!data || data.length === 0) {
        tbody.innerHTML = `<tr><td colspan="5" class="text-center text-gray-500 py-4">No orders found</td></tr>`;
        return;
      }

      data.forEach(order => {
        const row = document.createElement("tr");
        row.className = "border-t hover:bg-emerald-50 transition";
        row.innerHTML = `
          <td class="py-2 px-3 font-medium">${order.combination_id || "—"}</td>
          <td class="py-2 px-3">${order.date || "—"}</td>
          <td class="py-2 px-3">${order.quantity || 0}</td>
          <td class="py-2 px-3 font-semibold text-emerald-700">₹${order.amount || 0}</td>
          <td class="py-2 px-3">
            <span class="px-3 py-1 rounded-full text-xs ${
              order.status === "Completed"
                ? "bg-emerald-100 text-emerald-700"
                : "bg-yellow-100 text-yellow-700"
            }">${order.status || "Pending"}</span>
          </td>
        `;
        tbody.appendChild(row);
      });
    }

    // Filter orders
    function filterOrders(status) {
      if (status === "all") {
        renderOrders(allOrders);
      } else {
        renderOrders(allOrders.filter(o => o.status === status));
      }
    }
  </script>
</body>
</html>
