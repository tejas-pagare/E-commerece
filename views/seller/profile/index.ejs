<body class="min-h-screen bg-gray-50 text-gray-900">
    <main class="p-4 md:p-6">
        <div class="mx-auto max-w-6xl rounded-lg border border-gray-200 bg-white shadow-sm overflow-hidden">
            <div class="h-1 w-full bg-green-500"></div>
            <div class="grid grid-cols-1 md:grid-cols-4">
                <!-- Sidebar inside the same card -->
                <aside class="md:col-span-1 border-b md:border-b-0 md:border-r border-gray-100 p-6">
                    <div class="text-center">
                        <img src="<%= seller.profileImage %>" alt="Seller profile picture"
                             class="w-20 h-20 rounded-full object-cover mx-auto ring-2 ring-green-100" />
                        <h2 class="text-base md:text-lg font-semibold mt-3"><%= seller.name %></h2>
                        <p class="text-xs text-gray-500 mt-1">Seller</p>
                    </div>
                    <nav class="space-y-2 text-left mt-6">
                        <a href="/api/v1/seller/account" data-nav
                           class="flex items-center gap-2 rounded-md border border-gray-200 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-green-50 hover:text-green-700">
                            <span>Overview</span>
                        </a>
                        <a href="/api/v1/seller/account/update" data-nav
                           class="flex items-center gap-2 rounded-md border border-gray-200 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-green-50 hover:text-green-700">
                            <span>Edit Account</span>
                        </a>
                        <a href="/api/v1/seller/" data-nav
                           class="flex items-center gap-2 rounded-md border border-gray-200 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-green-50 hover:text-green-700">
                            <span>Listed Products</span>
                        </a>
                        <a href="/api/v1/seller/logout"
                           class="flex items-center gap-2 rounded-md border border-gray-200 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-green-50 hover:text-green-700">
                            <span>Log Out</span>
                        </a>
                    </nav>
                </aside>

                <!-- Main content in the same card -->
                <section class="md:col-span-3 p-6 md:p-8">
                    <div class="flex items-start justify-between gap-4 mb-6">
                        <div>
                            <h1 class="text-xl md:text-2xl font-semibold tracking-tight">My Account</h1>
                            <p class="text-sm text-gray-500 mt-1">Update your account details</p>
                        </div>
                        <span class="inline-flex h-6 items-center rounded-full border border-gray-200 bg-white px-2 text-xs font-medium text-gray-600">Seller</span>
                    </div>

                    <!-- Update Account Form -->
                    <form onsubmit="return handleAccountUpdate(event)" class="account-form space-y-6">
                        <h2 class="text-lg font-medium">Account Details</h2>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-2">
                                <label for="name" class="text-sm font-medium text-gray-700">Name <span class="text-red-500">*</span></label>
                                <input id="name" name="name" value="<%= seller.name %>" required
                                       class="block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-green-200 focus:border-green-500" />
                            </div>

                            <div class="space-y-2">
                                <label for="email" class="text-sm font-medium text-gray-700">Email <span class="text-red-500">*</span></label>
                                <input id="email" name="email" type="email" value="<%= seller.email %>" required
                                       class="block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-green-200 focus:border-green-500" />
                            </div>

                            <div class="space-y-2 md:col-span-2">
                                <label for="gstn" class="text-sm font-medium text-gray-700">GSTN <span class="text-red-500">*</span></label>
                                <input id="gstn" name="gstn" value="<%= seller.gstn %>" required
                                       class="block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-green-200 focus:border-green-500" />
                            </div>
                        </div>

                        <div class="pt-2">
                            <button type="submit" class="create-btn inline-flex items-center gap-2 rounded-md bg-green-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-200 disabled:opacity-70 disabled:cursor-not-allowed" aria-busy="false">
                                <svg class="spinner hidden h-4 w-4 shadcn-animate-spin" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
                                </svg>
                                <span class="btn-text">Save changes</span>
                            </button>
                        </div>
                    </form>
                </section>
            </div>
        </div>
    </main>

    <!-- Toast Container -->
    <div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <script>
        // minimal spinner animation if Tailwind isn't present
        (function(){
            const style = document.createElement('style');
            style.innerHTML = `@keyframes shadcn-spin { to { transform: rotate(360deg); } } .shadcn-animate-spin { animation: shadcn-spin 1s linear infinite; }`;
            document.head && document.head.appendChild(style);
        })();

        // Toast helpers (aligned with product page pattern)
        function showToast(message, type = 'info') {
            const container = document.getElementById('toastContainer');
            if (!container) return;
            const colors = {
                success: 'bg-green-600',
                error: 'bg-red-600',
                info: 'bg-gray-900',
                warning: 'bg-yellow-600'
            };
            const toast = document.createElement('div');
            toast.className = `${colors[type] || colors.info} text-white px-4 py-3 rounded shadow flex items-start gap-3`;
            toast.innerHTML = `
                <span class="text-sm">${message}</span>
                <button aria-label="Close" class="ml-2 text-white/80 hover:text-white" onclick="this.parentElement.remove()">âœ•</button>
            `;
            container.appendChild(toast);
            setTimeout(() => { if (toast && toast.parentElement) toast.remove(); }, 3500);
        }

        // Handle form submit with spinner + toasts
        async function handleAccountUpdate(event) {
            event.preventDefault();
            const form = document.querySelector('.account-form');
            const submitBtn = document.querySelector('.create-btn');
            const spinner = submitBtn?.querySelector('.spinner');
            const btnText = submitBtn?.querySelector('.btn-text');

            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            if (submitBtn) { submitBtn.disabled = true; submitBtn.setAttribute('aria-busy', 'true'); }
            if (spinner) spinner.classList.remove('hidden');
            if (btnText) btnText.textContent = 'Saving...';

            try {
                const response = await fetch('/api/v1/seller/account/update', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include',
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    showToast('Account updated successfully', 'success');
                    // slight delay to show toast before navigating
                    setTimeout(() => { window.location.href = '/api/v1/seller/account'; }, 400);
                } else {
                    const text = await response.text().catch(() => '');
                    console.error('Update failed', text);
                    showToast('Failed to update account details', 'error');
                }
            } catch (error) {
                console.error('Error submitting form:', error);
                showToast('Network error while updating', 'error');
            } finally {
                if (submitBtn) { submitBtn.disabled = false; submitBtn.setAttribute('aria-busy', 'false'); }
                if (spinner) spinner.classList.add('hidden');
                if (btnText) btnText.textContent = 'Save changes';
            }

            return false;
        }

        // Highlight active nav link inside the unified card
        (function() {
            const path = window.location.pathname;
            const links = document.querySelectorAll('aside nav a[data-nav]');
            links.forEach(a => {
                const href = a.getAttribute('href');
                if (!href) return;
                if (href === path) {
                    a.classList.add('bg-green-50','text-green-700','border-green-300');
                    a.setAttribute('aria-current','page');
                }
            });
        })();
    </script>
</body>