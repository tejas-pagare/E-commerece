<body>
  <div class="bg-gray-100 flex items-center justify-center min-h-screen w-full">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full min-h-screen">
      <h2 class="text-2xl font-bold mb-4">Shop Cart</h2>

      <div id="notification-container" class="fixed top-5 right-5 z-50 space-y-2"></div>

      <div class="bg-red-100 text-red-700 p-3 rounded-md mb-8 w-[40%]">
        You've got FREE delivery.
        Start <span class="font-bold">checkout now!</span>
      </div>

      <div id="cart-items" class="space-y-4">
        </div>

      <div class="flex justify-between mt-6">
        <a href="/api/v1/user/store">
          <button class="bg-green-600 text-white px-4 py-2 rounded">Continue Shopping</button>
        </a>
        <a href="/api/v1/user/checkout" class="bg-black text-white px-4 py-2 rounded">Proceed To Checkout</a>
      </div>
    </div>
  </div>

  <script>
    function showNotification(message, type) {
      const notificationContainer = document.querySelector("#notification-container");
      const notification = document.createElement("div");
      notification.className = `px-4 py-2 rounded-md shadow-md text-white transition-transform transform translate-x-full opacity-0 ${type === "success" ? "bg-green-500" : "bg-red-500"}`;
      notification.textContent = message;
      notificationContainer.appendChild(notification);
      setTimeout(() => {
        notification.classList.remove("translate-x-full", "opacity-0");
        notification.classList.add("translate-x-0", "opacity-100");
      }, 10);
      setTimeout(() => {
        notification.classList.add("opacity-0", "translate-x-full");
        setTimeout(() => {
          notification.remove();
        }, 200);
      }, 2000);
    }

    function fetchCart() {
      const xhr = new XMLHttpRequest();
      xhr.open("POST", "/api/v1/user/cart", true);
      // Since this is a POST route on the backend expecting credentials
      xhr.withCredentials = true; 

      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          try {
            const data = JSON.parse(xhr.responseText);
            if (data.cart) {
              renderCart(data.cart);
            }
          } catch (e) {
            console.error("Error parsing cart JSON:", e);
          }
        }
      };
      xhr.onerror = function() {
        console.error("Network error fetching cart.");
      };
      xhr.send();
    }

    function renderCart(cart) {
      const cartContainer = document.getElementById("cart-items");
      cartContainer.innerHTML = "";

      if (cart.length === 0) {
        cartContainer.innerHTML = `
          <div class="text-center">
            <img class="w-[200px] h-[200px] mx-auto" src="https://media.istockphoto.com/id/898475764/vector/shopping-trolley-cart-icon-in-green-circle-vector.jpg?s=612x612&w=0&k=20&c=W_b90qFRpj_FyLyI19xWqB6EoNSuJYwMSN9nnKkE9Hk=" />
            <div class="font-bold text-xl mt-4">Your Cart is Empty</div>
          </div>
        `;
      } else {
        cart.forEach((item) => {
          if (!item.productId) return; // Skip if a product was removed from the DB but is still in cart
          cartContainer.innerHTML += `
            <div class="grid grid-cols-4 items-center gap-4 border-b pb-4">
              <div class="w-[100px] h-[100px] overflow-hidden">
                <img class="h-full w-full object-cover object-top rounded" src="${item.productId.image}" alt="${item.productId.title}">
              </div>
              <div>
                <p class="font-semibold tracking-tighter text-sm">${item.productId.title}</p>
                <button class="text-red-600 text-sm" onclick="removeFromCartPermanent('${item.productId._id}')">ðŸ—‘ Remove</button>
              </div>
              <div class="flex items-center space-x-2">
                <button class="px-2 py-1 bg-gray-200 rounded" onclick="removeFromCart('${item.productId._id}')">-</button>
                <span id="qty-${item.productId._id}" class="px-4">${item.quantity}</span>
                <button class="px-2 py-1 bg-gray-200 rounded" onclick="AddToCart('${item.productId._id}')">+</button>
              </div>
              <p class="font-semibold text-lg">Rs. ${item.productId.price * item.quantity}</p>
            </div>
          `;
        });
      }
    }

    function AddToCart(productId) {
      const xhr = new XMLHttpRequest();
      xhr.open("POST", `/api/v1/user/cart/add/${productId}`, true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.withCredentials = true;

      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          const data = JSON.parse(xhr.responseText);
          if (data.success) {
            showNotification("Item added to cart!", "success");
            fetchCart();
          } else {
            showNotification("Failed to add item!", "error");
          }
        }
      };
      xhr.onerror = function() {
        showNotification("Error adding item!", "error");
      };
      xhr.send();
    }

    function removeFromCart(productId) {
      const xhr = new XMLHttpRequest();
      xhr.open("POST", `/api/v1/user/cart/remove/${productId}`, true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.withCredentials = true;

      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          const data = JSON.parse(xhr.responseText);
          if (data.success) {
            showNotification("Item removed from cart!", "success");
            fetchCart();
          } else {
            showNotification("Failed to remove item!", "error");
          }
        }
      };
      xhr.onerror = function() {
        showNotification("Error removing item!", "error");
      };
      xhr.send();
    }

    function removeFromCartPermanent(productId) {
      const xhr = new XMLHttpRequest();
      xhr.open("DELETE", `/api/v1/user/cart/remove/${productId}`, true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.withCredentials = true;

      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          const data = JSON.parse(xhr.responseText);
          if (data.success) {
            showNotification("Item permanently removed!", "success");
            fetchCart();
          } else {
            showNotification("Failed to remove item!", "error");
          }
        }
      };
      xhr.onerror = function() {
        showNotification("Error removing item!", "error");
      };
      xhr.send();
    }

    window.onload = fetchCart;
  </script>
</body>