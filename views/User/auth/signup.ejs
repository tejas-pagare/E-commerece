<body>
  <div class="min-h-screen flex items-center justify-center bg-gray-50">
    <div class="w-full mx-auto p-6 lg:flex lg:items-center lg:justify-between">
      <div class="w-full md:w-1/2 lg:w-1/3 hidden md:flex items-center justify-center mx-auto">
        <img src="https://freshcart-next-js.vercel.app/images/svg-graphics/signup-g.svg" alt="Sign in" class="w-full h-[50%] md:h-auto mx-auto">
      </div>
  
      <div class="w-full lg:w-1/2 max-w-3xl mx-auto">
        <h1 class="text-3xl font-bold mb-4">Get Started Shopping</h1>
        <p class="text-gray-600 mb-8">Welcome to SwiftMart! Enter your details to get started.</p>
  
        <form class="space-y-4" action="/api/v1/user/signup" method="POST" id="signupForm">
          <div>
            <label for="firstName" class="block text-sm font-medium">First Name</label>
            <input type="text" id="firstName" name="firstname" required class="mt-1 p-2 w-full border rounded-lg">
            <p class="text-red-500 text-sm mt-1 hidden" id="firstNameError"></p>
          </div>

          <div>
            <label for="lastName" class="block text-sm font-medium">Last Name</label>
            <input type="text" id="lastName" name="lastname" required class="mt-1 p-2 w-full border rounded-lg">
            <p class="text-red-500 text-sm mt-1 hidden" id="lastNameError"></p>
          </div>

          <div>
            <label for="email" class="block text-sm font-medium">Email</label>
            <input type="email" id="email" name="email" required class="mt-1 p-2 w-full border rounded-lg">
            <p class="text-red-500 text-sm mt-1 hidden" id="emailError"></p>
          </div>

          <div>
            <label for="password" class="block text-sm font-medium">Password</label>
            <div class="relative">
              <input type="password" id="password" name="password" required class="mt-1 p-2 w-full border rounded-lg pr-10">
              <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 flex items-center pr-3">
                üëÅÔ∏è
              </button>
            </div>
            <p class="text-red-500 text-sm mt-1 hidden" id="passwordError"></p>
          </div>
  
          <button type="submit" class="w-full bg-green-600 text-white p-2 rounded-lg hover:bg-green-700">Register</button>
        </form>
  
        <p class="text-xs text-gray-500 mt-4">By continuing, you agree to our <a href="#" class="text-green-600 underline">Terms of Service</a> & <a href="#" class="text-green-600 underline">Privacy Policy</a>.</p>
        <p class="mt-6 text-center text-gray-700">Already have an account? <a href="/api/v1/user/login" class="text-green-600 hover:underline">Login</a></p>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
        const signupForm = document.getElementById('signupForm');

        signupForm.addEventListener('submit', function (event) {
            let isValid = true;

            const firstName = document.getElementById('firstName');
            const lastName = document.getElementById('lastName');
            const email = document.getElementById('email');
            const password = document.getElementById('password');

            const firstNameError = document.getElementById('firstNameError');
            const lastNameError = document.getElementById('lastNameError');
            const emailError = document.getElementById('emailError');
            const passwordError = document.getElementById('passwordError');

            // Clear previous errors
            firstNameError.classList.add('hidden');
            lastNameError.classList.add('hidden');
            emailError.classList.add('hidden');
            passwordError.classList.add('hidden');

            // Validation patterns
            const namePattern = /^[a-z]+$/i;
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!namePattern.test(firstName.value.trim())) {
                firstNameError.textContent = "First Name should contain only letters.";
                firstNameError.classList.remove('hidden');
                isValid = false;
            }

            if (!namePattern.test(lastName.value.trim())) {
                lastNameError.textContent = "Last Name should contain only letters.";
                lastNameError.classList.remove('hidden');
                isValid = false;
            }

            if (!emailPattern.test(email.value.trim())) {
                emailError.textContent = "Invalid email address.";
                emailError.classList.remove('hidden');
                isValid = false;
            }

            if (password.value.length < 8) {
                passwordError.textContent = "Password must be at least 8 characters long.";
                passwordError.classList.remove('hidden');
                isValid = false;
            }

            if (!isValid) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

        const passwordInput = document.getElementById('password');
        const togglePassword = document.getElementById('togglePassword');
        togglePassword.addEventListener('click', () => {
            passwordInput.type = passwordInput.type === 'password' ? 'text' : 'password';
        });
    });
  </script>
</body>